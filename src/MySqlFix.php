<?php
//----------------------------------------------------------------------------------------------------------------------
namespace SetBased\ErdConcepts;

/**
 * Class for fixing issues in SQL code generated by ERD Concepts with MySQL as target database.
 */
class MySqlFix
{
  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Maximum length of column comments in MySQL.
   */
  const MAX_COLUMN_COMMENT_LENGTH = 1024;

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Add comments to column definitions based on commented comments.
   *
   * @param string $source The SQL code generated by ERD concepts.
   *
   * @return string
   */
  public static function fixColumnComments(string $source): string
  {
    $lines = explode(PHP_EOL, $source);

    // Map from (table_name,column_name) to line number
    $map = [];

    // Scan the source for column definitions.
    $table_name = null;
    foreach ($lines as $i => $line)
    {
      if (isset($table_name))
      {
        if (preg_match('/^  (`?\w+`?)/', $line, $matches))
        {
          $map[$table_name][$matches[1]] = $i;
        }
        else
        {
          $table_name = null;
        }
      }

      if ($table_name===null && preg_match('/^CREATE TABLE (`?\w+`?)/', $line, $matches))
      {
        $table_name = $matches[1];
      }
    }

    // Scan the source for comments.
    $comments = [];
    foreach ($lines as $i => $line)
    {
      if (preg_match('/^COMMENT ON COLUMN (`?\w+`?).(`?\w+`?)/', $line, $matches))
      {
        $comments[$matches[1]][$matches[2]] = trim($lines[$i + 1]);
      }
    }

    // Enhance the column definitions with comments.
    foreach ($comments as $tableName => $columns)
    {
      if (!isset($map[$tableName]))
      {
        throw new \RuntimeException(sprintf("Table '%s' is not defined.", $tableName));
      }

      foreach ($columns as $columnName => $comment)
      {
        if (!isset($map[$tableName][$columnName]))
        {
          throw new \RuntimeException(sprintf("Column '%s' is not defined in '%s' table statements.",
                                              $columnName,
                                              $tableName));
        }

        $line_number = $map[$tableName][$columnName];

        // Truncate comments longer than 60 characters.
        if (strlen($comment)>self::MAX_COLUMN_COMMENT_LENGTH)
        {
          $comment = trim(mb_substr($comment, 0, self::MAX_COLUMN_COMMENT_LENGTH - 3)).'...';
        }

        // Enhance the column definition with comment.
        $lines[$line_number] = mb_substr(rtrim($lines[$line_number]), 0, -1);
        $lines[$line_number] .= " COMMENT '".self::escapeMysqlString($comment)."',";
      }
    }

    return implode(PHP_EOL, $lines);
  }


  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Add comments to index definitions based on commented comments.
   *
   * @param string $source The SQL code generated by ERD concepts.
   *
   * @return string
   */
  public static function fixIndexComments(string $source): string
  {
    $lines = explode(PHP_EOL, $source);

    // Map from (table_name,column_name) to line number
    $map = [];

    // Scan the source for column definitions.
    $index_name = null;
    foreach ($lines as $i => $line)
    {
      if (preg_match('/^CREATE INDEX (`?\w+`?)(\s*\()?/', $line, $matches))
      {
        $map[$matches[1]] = $i;
      }
    }

    // Scan the source for comments.
    $comments = [];
    foreach ($lines as $i => $line)
    {
      if (preg_match('/^COMMENT ON INDEX (`?\w+`?)/', $line, $matches))
      {
        $comments[$matches[1]] = trim($lines[$i + 1]);
      }
    }

    // Enhance the column definitions with comments.
    foreach ($comments as $indexName => $comment)
    {
      if (!isset($map[$indexName]))
      {
        throw new \RuntimeException(sprintf("Table '%s' is not defined.", $indexName));
      }

      $lineNumber = $map[$indexName];

      // Truncate comments longer than 60 characters.
      if (strlen($comment)>self::MAX_COLUMN_COMMENT_LENGTH)
      {
        $comment = trim(mb_substr($comment, 0, self::MAX_COLUMN_COMMENT_LENGTH - 3)).'...';
      }

      // Enhance the column definition with comment.
      $lines[$lineNumber] = mb_substr(rtrim($lines[$lineNumber]), 0, -1);
      $lines[$lineNumber] .= " COMMENT '".self::escapeMysqlString($comment)."';";
    }

    return implode(PHP_EOL, $lines);
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Add comments to table definitions based on commented comments.
   *
   * @param string $source The SQL code generated by ERD concepts.
   *
   * @return string
   */
  public static function fixTableComments(string $source): string
  {
    $lines = explode(PHP_EOL, $source);

    // Map from (table_name,column_name) to line number
    $map = [];

    // Scan the source for column definitions.
    $table_name = null;
    $level      = 0;
    foreach ($lines as $i => $line)
    {
      if (isset($table_name))
      {
        if (preg_match('/\)|\(/', $line, $matches))
        {
          if ($matches[0]=='(')
          {
            $level = +1;
          }
          if ($matches[0]==')')
          {
            $level = -1;
          }

          if ($level<0)
          {
            $map[$table_name] = $i;
            $table_name       = null;
          }
        }
      }

      if ($table_name===null && preg_match('/^CREATE TABLE (`?\w+`?)(\s*\()?/', $line, $matches))
      {
        $table_name = $matches[1];
        if ($matches[2])
        {
          $level = 1;
        }
      }
    }

    // Scan the source for comments.
    $comments = [];
    foreach ($lines as $i => $line)
    {
      if (preg_match('/^COMMENT ON TABLE (`?\w+`?)/', $line, $matches))
      {
        $comments[$matches[1]] = trim($lines[$i + 1]);
      }
    }

    // Enhance the column definitions with comments.
    foreach ($comments as $table_name => $comment)
    {
      if (!isset($map[$table_name]))
      {
        throw new \RuntimeException(sprintf("Table '%s' is not defined.", $table_name));
      }

      $line_number = $map[$table_name];

      // Truncate comments longer than 60 characters.
      if (strlen($comment)>self::MAX_COLUMN_COMMENT_LENGTH)
      {
        $comment = trim(mb_substr($comment, 0, self::MAX_COLUMN_COMMENT_LENGTH - 3)).'...';
      }

      // Enhance the column definition with comment.
      $lines[$line_number] = mb_substr(rtrim($lines[$line_number]), 0, -1);
      $lines[$line_number] .= " COMMENT '".self::escapeMysqlString($comment)."';";
    }

    return implode(PHP_EOL, $lines);
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Escapes special characters in a string for use in an SQL statement.
   *
   * @param string $string The string that is to be escaped.
   *
   * @return string
   */
  protected static function escapeMysqlString(string $string): string
  {
    // We prefer to use mysqli::escape_string but this method requires a connection. Since ERD Concepts generates
    // SQL code in UTF-8 and $unescaped_string is not user input (from the evil internet) we can safely use addslashes.
    return addslashes($string);
  }

  //--------------------------------------------------------------------------------------------------------------------
}

//----------------------------------------------------------------------------------------------------------------------
